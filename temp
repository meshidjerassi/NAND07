POP to LCL/ARG/THIS/THAT:
@SP
A=M-1
D=M
@R13
M=D
@SP
M=M-1
@LCL/ARG/THIS/THAT
D=M

@i
D=A+D
@R14
M=D

@R13
D=M
@R14
A=M
M=D

POP to pointer/temp:
@SP
A=M-1
D=M
@R13
M=D
@SP
M=M-1
@3/5
D=A
@i
D=A+D
@R14
M=D
@R13
D=M
@R14
A=M
M=D
M=D

POP to static:
@SP
A=M-1
D=M
@R13
M=D
@SP
M=M-1
@f.i
D=A
@R14
M=D
@R13
D=M
@R14
A=M
M=D

Push from LCL/ARG/THIS/THAT:
@LCL
D=M
@i
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1

PUSH from ptr/temp:
@3/5
D=A
@i
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1

PUSH from static:
@f.i
D=M
@SP
A=M
M=D
@SP
M=M+1

PUSH const:
@i
D=A
@SP
A=M
M=D
@SP
M=M+1

BASIC MATH:
@SP
A=M-1
D=M
@SP
M=M-1
A=M-1
add:
M=D+M
sub:
D=-D
M=D+M
and:
M=D&M
or:
M=D|M

NEG/NOT:
@SP
A=M-1
M=-M/!M


EQ/LT/GT:
@SP
A=M-1
D=M
@R13//y
M=D
@SP
M=M-1
A=M-1
D=M
@R14//x
M=D

@NEG_X
D;JLT
@R13
D=M
@FALSE/FALSE/TRUE
D;JLT
@COMPARE
0;JMP

(NEG_X)
@R13
D=M
@FALSE/TRUE/FALSE
D;JGT
@COMPARE
0;JMP

(COMPARE)
@R14
D=M
@R13
D=D-M
@TRUE
D;JEQ/JLT/JGT
@FALSE
0;JMP

(FALSE)
@SP
A=M-1
M=0
@END
0;JMP
(TRUE)
@SP
A=M-1
M=-1
(END)